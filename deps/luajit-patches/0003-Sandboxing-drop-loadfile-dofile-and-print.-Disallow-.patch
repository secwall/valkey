diff --git a/src/lib_base.c b/src/lib_base.c
index d644b4f2..020ff5cb 100644
--- a/src/lib_base.c
+++ b/src/lib_base.c
@@ -377,17 +377,6 @@ static int load_aux(lua_State *L, int status, int envarg)
   }
 }
 
-LJLIB_CF(loadfile)
-{
-  GCstr *fname = lj_lib_optstr(L, 1);
-  GCstr *mode = lj_lib_optstr(L, 2);
-  int status;
-  lua_settop(L, 3);  /* Ensure env arg exists. */
-  status = luaL_loadfilex(L, fname ? strdata(fname) : NULL,
-			  mode ? strdata(mode) : NULL);
-  return load_aux(L, status, 3);
-}
-
 static const char *reader_func(lua_State *L, void *ud, size_t *size)
 {
   UNUSED(ud);
@@ -410,7 +399,7 @@ static const char *reader_func(lua_State *L, void *ud, size_t *size)
 LJLIB_CF(load)
 {
   GCstr *name = lj_lib_optstr(L, 2);
-  GCstr *mode = lj_lib_optstr(L, 3);
+  char *mode = "t";
   int status;
   if (L->base < L->top &&
       (tvisstr(L->base) || tvisnumber(L->base) || tvisbuf(L->base))) {
@@ -428,12 +417,12 @@ LJLIB_CF(load)
     }
     lua_settop(L, 4);  /* Ensure env arg exists. */
     status = luaL_loadbufferx(L, s, len, name ? strdata(name) : s,
-			      mode ? strdata(mode) : NULL);
+			      mode);
   } else {
     lj_lib_checkfunc(L, 1);
     lua_settop(L, 5);  /* Reserve a slot for the string from the reader. */
     status = lua_loadx(L, reader_func, NULL, name ? strdata(name) : "=(load)",
-		       mode ? strdata(mode) : NULL);
+		       mode);
   }
   return load_aux(L, status, 4);
 }
@@ -443,17 +432,6 @@ LJLIB_CF(loadstring)
   return lj_cf_load(L);
 }
 
-LJLIB_CF(dofile)
-{
-  GCstr *fname = lj_lib_optstr(L, 1);
-  setnilV(L->top);
-  L->top = L->base+1;
-  if (luaL_loadfile(L, fname ? strdata(fname) : NULL) != LUA_OK)
-    lua_error(L);
-  lua_call(L, 0, LUA_MULTRET);
-  return (int)(L->top - L->base) - 1;
-}
-
 /* -- Base library: GC control -------------------------------------------- */
 
 LJLIB_CF(gcinfo)
@@ -510,44 +488,6 @@ LJLIB_CF(newproxy)
 }
 
 LJLIB_PUSH("tostring")
-LJLIB_CF(print)
-{
-  ptrdiff_t i, nargs = L->top - L->base;
-  cTValue *tv = lj_tab_getstr(tabref(L->env), strV(lj_lib_upvalue(L, 1)));
-  int shortcut;
-  if (tv && !tvisnil(tv)) {
-    copyTV(L, L->top++, tv);
-  } else {
-    setstrV(L, L->top++, strV(lj_lib_upvalue(L, 1)));
-    lua_gettable(L, LUA_GLOBALSINDEX);
-    tv = L->top-1;
-  }
-  shortcut = (tvisfunc(tv) && funcV(tv)->c.ffid == FF_tostring) &&
-	     !gcrefu(basemt_it(G(L), LJ_TNUMX));
-  for (i = 0; i < nargs; i++) {
-    cTValue *o = &L->base[i];
-    const char *str;
-    size_t size;
-    MSize len;
-    if (shortcut && (str = lj_strfmt_wstrnum(L, o, &len)) != NULL) {
-      size = len;
-    } else {
-      copyTV(L, L->top+1, o);
-      copyTV(L, L->top, L->top-1);
-      L->top += 2;
-      lua_call(L, 1, 1);
-      str = lua_tolstring(L, -1, &size);
-      if (!str)
-	lj_err_caller(L, LJ_ERR_PRTOSTR);
-      L->top--;
-    }
-    if (i)
-      putchar('\t');
-    fwrite(str, 1, size, stdout);
-  }
-  putchar('\n');
-  return 0;
-}
 
 LJLIB_PUSH(top-3)
 LJLIB_SET(_VERSION)
-- 
2.47.0

